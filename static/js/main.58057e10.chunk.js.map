{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","App","useState","peerId","setPeerId","remotePeerIdValue","setRemotePeerIdValue","remoteVideoRef","useRef","currentUserVideoRef","peerInstance","useEffect","peer","Peer","on","call","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","video","audio","mediaStream","current","srcObject","play","answer","remoteStream","className","type","value","onChange","target","onClick","remotePeerId","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,yIC2DVC,MA/Df,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEqCF,mBAAS,IAF9C,mBAENG,EAFM,KAEaC,EAFb,KAGPC,EAAiBC,iBAAO,MACxBC,EAAsBD,iBAAO,MAC7BE,EAAeF,iBAAO,MA2C5B,OAzCAG,qBAAU,WACR,IAAMC,EAAO,IAAIC,IAEjBD,EAAKE,GAAG,QAAQ,SAACd,GACfI,EAAUJ,MAGZY,EAAKE,GAAG,QAAQ,SAACC,IACIC,UAAUC,cAAgBD,UAAUE,oBAAsBF,UAAUG,iBAE1E,CAAEC,OAAO,EAAMC,OAAO,IAAQ,SAACC,GAC1Cb,EAAoBc,QAAQC,UAAYF,EACxCb,EAAoBc,QAAQE,OAC5BV,EAAKW,OAAOJ,GACZP,EAAKD,GAAG,UAAU,SAASa,GACzBpB,EAAegB,QAAQC,UAAYG,EACnCpB,EAAegB,QAAQE,gBAK7Bf,EAAaa,QAAUX,IACtB,IAoBD,sBAAKgB,UAAU,MAAf,UACE,qDAAwBzB,KACxB,uBAAO0B,KAAK,OAAOC,MAAOzB,EAAmB0B,SAAU,SAAAtC,GAAC,OAAIa,EAAqBb,EAAEuC,OAAOF,UAC1F,wBAAQG,QAAS,kBArBPC,EAqBkB7B,OApBXW,UAAUC,cAAgBD,UAAUE,oBAAsBF,UAAUG,iBAE1E,CAAEC,OAAO,EAAMC,OAAO,IAAQ,SAACC,GAE1Cb,EAAoBc,QAAQC,UAAYF,EACxCb,EAAoBc,QAAQE,OAEff,EAAaa,QAAQR,KAAKmB,EAAcZ,GAEhDR,GAAG,UAAU,SAACa,GACjBpB,EAAegB,QAAQC,UAAYG,EACnCpB,EAAegB,QAAQE,aAZhB,IAACS,GAqBV,kBACA,8BACE,uBAAOC,IAAK1B,MAEd,8BACE,uBAAO0B,IAAK5B,UCjDL6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.58057e10.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 11;","import { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'peerjs';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [peerId, setPeerId] = useState('');\r\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n  const remoteVideoRef = useRef(null);\r\n  const currentUserVideoRef = useRef(null);\r\n  const peerInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const peer = new Peer();\r\n\r\n    peer.on('open', (id) => {\r\n      setPeerId(id)\r\n    });\r\n\r\n    peer.on('call', (call) => {\r\n      var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n\r\n      getUserMedia({ video: true, audio: true }, (mediaStream) => {\r\n        currentUserVideoRef.current.srcObject = mediaStream;\r\n        currentUserVideoRef.current.play();\r\n        call.answer(mediaStream)\r\n        call.on('stream', function(remoteStream) {\r\n          remoteVideoRef.current.srcObject = remoteStream\r\n          remoteVideoRef.current.play();\r\n        });\r\n      });\r\n    })\r\n\r\n    peerInstance.current = peer;\r\n  }, [])\r\n\r\n  const call = (remotePeerId) => {\r\n    var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n\r\n    getUserMedia({ video: true, audio: true }, (mediaStream) => {\r\n\r\n      currentUserVideoRef.current.srcObject = mediaStream;\r\n      currentUserVideoRef.current.play();\r\n\r\n      const call = peerInstance.current.call(remotePeerId, mediaStream)\r\n\r\n      call.on('stream', (remoteStream) => {\r\n        remoteVideoRef.current.srcObject = remoteStream\r\n        remoteVideoRef.current.play();\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Current user id is {peerId}</h1>\r\n      <input type=\"text\" value={remotePeerIdValue} onChange={e => setRemotePeerIdValue(e.target.value)} />\r\n      <button onClick={() => call(remotePeerIdValue)}>Call</button>\r\n      <div>\r\n        <video ref={currentUserVideoRef} />\r\n      </div>\r\n      <div>\r\n        <video ref={remoteVideoRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}